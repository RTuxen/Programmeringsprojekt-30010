Plan over programmeringsprojekt

PowerUps/Downs Ideer:
- Extra ball
- Extra speed/less speed
- Extra board speed on demand
- Bigger/smaller board
- DangerBomb
- Extra life
- Sticky board
- Reverse board direction

Controller Ideer:
- Joystick - (Første kontroller vi skal have til at virke)
- Ret
- Wiiboard
- Potentiometer (blå dimser) - (Kan måske bruges til ændring af hastighed ingame)
- Accelerometer



Funktioner:


//MENU:

void chooseMenuOptions(){
//variable: k, q, higscores[] og n
//while(1) styr med "controller" op og ned og button-click.
//Vælg mellem: Play, options, highscore, help
//Mulig styre metode: joystick - up/ned og højre for at vælge, venstre for at gå tilbage 
}


void chooseLevel(){
//Variable: k, q og n
//Efter play er valgt, kan levels (maps) vælges.
}

void chooseOptions(){
//Variable: k,q og n
//Vælg sværhedsgrad - hastighed og omvendt styring.
}

void chooseHighscore() {
//Variable: n 
//Viser score og highscores. 
}

void chooseHelp(){
//variable: n og q
//Viser en guide til spillet.
}

uint8_t changeSpeed(){
//Variable: k, g n
//Kan ændre hastigheden.
//kan styres med joystikket.
}



//DRAW:

void drawMenuWindow() 
//Variable: char str[]
//Tegner vindue med tittel i toppen og options i midten
}


void drawPlayWindow() {
//Variable: char str[]
//tegner viduet der viser alle levelsne man kan vælge.
}

void drawOptionWindow() {
//Variable: char str[]
//tegner vinduet, der viser de options man kan vælge (speed-mode, mirrow-mode) .
}

void drawHighscoreWindow() {
//Variable: char str[]
//Tegner higscorevinduet. 
}

void drawHelpWindow() {
//Variable: char str[]
//tegner viduet for "Hjælp". 
}



void drawWalls (){ 
//Variable: i, j, dx, dy og style   
//Tegner væggene i spillet.
}

void drawball(struct ball_t * ball){
//Tegner bolden
}

void drawPlayer(struct player_t *striker){
//Tegner spilleren(boardet). 
}

void drawBlock(struct block_t block) { 
//Tegner blokkene, hver blok er 15 bred og 2 høj.

}

void drawBlockMap(struct block_t *bricks){
//Variable: i
//Tegner alle blokkene i spillet.


//GAMEPHYSICS:


void initbold (struct ball_t* ball, int32_t x, int32_t y, int32_t dx, int32_t dy){
//Variable: x, y, dx og dy
//initialiserer bolden
}

void initPlayer(struct player_t * striker, uint16_t x, uint16_t y){
//Variable: x, y, lifes, level og point
//Spillerens liv, level og point.
}

void initLevel(struct ball_t *ball, struct player_t *striker, struct level_t *level){
//Variable: i 
//Opstiller banen og funktionerne for det valgte level.
}

uint8_t updateBallPos(struct ball_t * ball,struct player_t *striker, int8_t x1 , int8_t y1,int8_t x2,int8_t y2){
//Variable: playerhit, wallhit
// Check for kollision
// Hvis kollision med blocks, updateLevel, updateVector updateScore
// Hvis kollision med player eller en af 3 walls, updateVector og drawBall
// Hvis ingen kollision, drawBall ud fra sidste position og vector
// Hvis out of bounds, restart ballPos og playerPos uden restart af level (mulig brug af initLevel), updateLives
}

void updatePlayerPos(struct player_t *striker){
//Varible: oldx og oldy
// Tjekker retning for at kunne tegne spilleren, anvender joystik.
}

uint16_t checkPlayerCollision(struct ball_t * ball, struct player_t * striker){
//Varisable: hit
//Tjekker om playeren rammes, hvis ikke trækkes et liv fra. 

uint16_t checkBlockCollision(struct ball_t* ball, struct level_t* level) {
//Variable: i, hit
//Rammes en block, trækkes et liv fra blokken. 




//DISPLAY:

void initDisplay(uint8_t *buffer){
//Variable: 
//initialiserer display. 
nulstiller

}

void lcd_write_string(uint8_t *buffer, char *text, uint8_t slice, uint8_t line){ //Antager slice [0,128] og line[0,3]
//Variable: textlenght, i, j og k 
//sørger for at vi kan skrive indenfor rammerne og skriver
   
}


















showLivesLCD(){
// Vis liv på LCD
}

showLevelLCD(){
// Vis level på LCD
}

showScoreLCD(){
// Vis score på LCD
}

showLivesPutty(){
// Vis liv på Putty
}

showLevelPutty(){
// Vis level på Putty
}

showScorePutty(){
//Vis score på Putty
}



















































